{"version":3,"sources":["images/photosnap.svg","images/manage.svg","images/account.svg","images/myhome.svg","images/loop-studios.svg","images/faceit.svg","images/shortly.svg","images/insure.svg","images/eyecam-co.svg","images/the-air-filter-company.svg","images/bg-header-mobile.svg","images/bg-header-desktop.svg","components/Button/Button.js","components/Card/CardHeader.js","components/KeywordSection/KeywordSection.js","components/Card/Logo.js","components/Card/Card.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Button","props","label","type","classStr","className","CardHeader","company","isNew","featured","position","postedAt","contract","location","KeywordSection","role","languages","tools","level","id","map","language","key","tool","Logo","src","logo1","alt","logo2","logo3","logo4","logo5","logo6","logo7","logo8","logo9","logo10","Card","job","logo","containerClass","styles","isDesktopSized","backgroundImage","headerDesktop","headerMobile","App","mediaMatch","window","matchMedia","useState","matches","setMatches","useEffect","handler","e","addListener","removeListener","style","jobs","href","target","rel","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oIAAAA,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,oD,4xFCA3CD,EAAOC,QAAU,IAA0B,8C,gBCA3CD,EAAOC,QAAU,IAA0B,+C,uNCgB5BC,MAbf,SAAgBC,GAAQ,IACfC,EAAeD,EAAfC,MAAOC,EAAQF,EAARE,KACVC,EAAQ,iBAAaD,GAIzB,MAHa,QAATA,GAA2B,aAATA,IACpBC,GAAY,WAGZ,4BAAQC,UAAWD,GAChBF,ICoBQI,MA3Bf,SAAoBL,GAAQ,IACnBM,EACON,EADPM,QAASC,EACFP,EADEO,MAAOC,EACTR,EADSQ,SAAUC,EACnBT,EADmBS,SAAUC,EAC7BV,EAD6BU,SAAUC,EACvCX,EADuCW,SACnDC,EAAYZ,EAAZY,SAEF,OACE,yBAAKR,UAAU,yBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,MAAME,IACV,IAAVC,GACC,kBAAC,EAAD,CAAQN,MAAM,OAAOC,KAAK,SAEd,IAAbM,GACC,kBAAC,EAAD,CAAQP,MAAM,WAAWC,KAAK,cAGlC,yBAAKE,UAAU,MAAMK,GACrB,yBAAKL,UAAU,OACX,yBAAKA,UAAU,WAAWM,GAC1B,yBAAKN,UAAU,WAAWO,GAC1B,yBAAKP,UAAU,WAAWQ,IAG9B,gC,MCASC,MAtBf,SAAwBb,GAAQ,IACvBc,EAAqCd,EAArCc,KAAMC,EAA+Bf,EAA/Be,UAAWC,EAAoBhB,EAApBgB,MAAOC,EAAajB,EAAbiB,MAAOC,EAAMlB,EAANkB,GACtC,OACE,yBAAKd,UAAU,iCACb,kBAAC,EAAD,CAAQH,MAAOa,EAAMZ,KAAK,YAC1B,kBAAC,EAAD,CAAQD,MAAOgB,EAAOf,KAAK,YAC1Ba,EAAUI,KAAI,SAAAC,GACb,IAAIC,EAAG,UAAMH,EAAN,YAAYE,GACnB,OACE,kBAAC,EAAD,CAAQnB,MAAOmB,EAAUlB,KAAK,UAAUmB,IAAKA,OAGhDL,EAAMG,KAAI,SAAAG,GACT,IAAID,EAAG,UAAMH,EAAN,YAAYI,GACnB,OACE,kBAAC,EAAD,CAAQrB,MAAOqB,EAAMpB,KAAK,UAAUmB,IAAKA,S,oKCqCpCE,MA3Cf,SAAcvB,GAAQ,IACbkB,EAAMlB,EAANkB,GAmCP,OACE,yBAAKd,UAAU,QAjCJ,IAAPc,EACM,yBAAKM,IAAKC,IAAOC,IAAI,iBAEpB,IAAPR,EACM,yBAAKM,IAAKG,IAAOD,IAAI,iBAEpB,IAAPR,EACM,yBAAKM,IAAKI,IAAOF,IAAI,iBAEpB,IAAPR,EACM,yBAAKM,IAAKK,IAAOH,IAAI,iBAEpB,IAAPR,EACM,yBAAKM,IAAKM,IAAOJ,IAAI,iBAEpB,IAAPR,EACM,yBAAKM,IAAKO,IAAOL,IAAI,iBAEpB,IAAPR,EACM,yBAAKM,IAAKQ,IAAON,IAAI,iBAEpB,IAAPR,EACM,yBAAKM,IAAKS,IAAOP,IAAI,iBAEpB,IAAPR,EACM,yBAAKM,IAAKU,IAAOR,IAAI,iBAEpB,KAAPR,EACM,yBAAKM,IAAKW,IAAQT,IAAI,sBADhC,ICrBWU,MAjBf,SAAcpC,GAAQ,IAAD,EAEiBA,EAAMqC,IADnC/B,EADY,EACZA,QAASgC,EADG,EACHA,KAAM/B,EADH,EACGA,MAAOC,EADV,EACUA,SAAUC,EADpB,EACoBA,SAAUK,EAD9B,EAC8BA,KAAMG,EADpC,EACoCA,MAAOP,EAD3C,EAC2CA,SAAUC,EADrD,EACqDA,SACtEC,EAFiB,EAEjBA,SAAUG,EAFO,EAEPA,UAAWC,EAFJ,EAEIA,MAAOE,EAFX,EAEWA,GAExBqB,EAAiB/B,EAAW,+BAAgC,iBAElE,OACE,yBAAKJ,UAAWmC,GACd,kBAAC,EAAD,CAAMrB,GAAIA,IACV,kBAAC,EAAD,CAAYZ,QAASA,EAASgC,KAAMA,EAAM/B,MAAOA,EAAOC,SAAUA,EAChEC,SAAUA,EAAUC,SAAUA,EAAUC,SAAUA,EAClDC,SAAUA,EAAUM,GAAIA,IAC1B,kBAAC,EAAD,CAAgBH,UAAWA,EAAWC,MAAOA,EAAOF,KAAMA,EAAMG,MAAOA,EAAOC,GAAIA,M,0CCXlFsB,EACO,SAAAC,GAAc,MAAK,CAC5BC,gBAA+B,cAAdD,EAAwBE,IAAyBC,IAAnC,OAgCpBC,MA5Bf,WACE,IAAMC,EAAaC,OAAOC,WAAW,sBADxB,EAEiBC,mBAASH,GAF1B,mBAENI,EAFM,KAEGC,EAFH,KAUb,OANAC,qBAAU,WACR,IAAMC,EAAU,SAAAC,GAAC,OAAIH,EAAWG,EAAEJ,UAElC,OADAJ,EAAWS,YAAYF,GAChB,kBAAMP,EAAWU,eAAeH,MACtC,IAGD,6BACE,4BAAQI,MAAOjB,EAAiBU,KAChC,0BAAMhC,GAAG,OACNwC,EAAKvC,KAAI,SAAAkB,GAAG,OACV,kBAAC,EAAD,CAAMhB,IAAKgB,EAAInB,GAAImB,IAAKA,QAG7B,gCACE,yBAAKjC,UAAU,eAAf,gBACe,uBAAGuD,KAAK,8CAA8CC,OAAO,SAASC,IAAI,uBAA1E,mBADf,cAEW,uBAAGF,KAAK,2BAA2BC,OAAO,SAASC,IAAI,uBAAvD,eAFX,QCpBYC,QACW,cAA7Bf,OAAOnC,SAASmD,UAEe,UAA7BhB,OAAOnC,SAASmD,UAEhBhB,OAAOnC,SAASmD,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.4ed3f913.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/photosnap.3f34b49c.svg\";","module.exports = __webpack_public_path__ + \"static/media/manage.fbe431a9.svg\";","module.exports = __webpack_public_path__ + \"static/media/account.9f72c13b.svg\";","module.exports = __webpack_public_path__ + \"static/media/myhome.e0ad9358.svg\";","module.exports = __webpack_public_path__ + \"static/media/loop-studios.6c50fd74.svg\";","module.exports = __webpack_public_path__ + \"static/media/faceit.76faa79f.svg\";","module.exports = __webpack_public_path__ + \"static/media/shortly.45f63772.svg\";","module.exports = __webpack_public_path__ + \"static/media/insure.52b85a50.svg\";","module.exports = __webpack_public_path__ + \"static/media/eyecam-co.39eaebdf.svg\";","module.exports = __webpack_public_path__ + \"static/media/the-air-filter-company.23b515f9.svg\";","module.exports = __webpack_public_path__ + \"static/media/bg-header-mobile.6b5ff5a0.svg\";","module.exports = __webpack_public_path__ + \"static/media/bg-header-desktop.6e2f7196.svg\";","import React from 'react';\nimport './Button.scss';\n\nfunction Button(props) {\n  const {label, type} = props;\n  let classStr = `button-${type}`;\n  if (type === 'new' || type === 'featured') {\n    classStr += ' button';\n  }\n  return (\n    <button className={classStr}>\n      {label}\n    </button>\n  );\n}\n\nexport default Button;\n","import React from 'react';\nimport './Card.scss';\nimport Button from '../Button/Button';\n\nfunction CardHeader(props) {\n  const {company, isNew, featured, position, postedAt, contract,\n    location} = props\n\n  return (\n    <div className=\"card-header-container\">\n      <div className=\"row card-line1\">\n        <div className=\"h2\">{company}</div>\n        {isNew === true && (\n          <Button label=\"NEW!\" type=\"new\" />\n        )}\n        {featured === true && (\n          <Button label=\"FEATURED\" type=\"featured\" />\n        )}\n      </div>\n      <div className=\"h1\">{position}</div>\n      <div className=\"row\">\n          <div className=\"summary\">{postedAt}</div>\n          <div className=\"summary\">{contract}</div>\n          <div className=\"summary\">{location}</div>\n      </div>\n      \n      <div></div>\n    </div>\n  );\n}\n\nexport default CardHeader;\n","import React from 'react';\nimport './KeywordSection.scss';\nimport Button from '../Button/Button';\n\nfunction KeywordSection(props) {\n  const {role, languages, tools, level, id} = props;\n  return (\n    <div className=\"keyword-section-container row\">\n      <Button label={role} type=\"keyword\" />\n      <Button label={level} type=\"keyword\" />\n      {languages.map(language => {\n        let key = `${id}-${language}`;\n        return (\n          <Button label={language} type=\"keyword\" key={key}/>\n        )\n      })}\n      {tools.map(tool => {\n        let key = `${id}-${tool}`;\n        return (\n          <Button label={tool} type=\"keyword\" key={key}/>\n        )\n      })}\n    </div>\n  );\n}\n\nexport default KeywordSection;\n","import React from 'react';\nimport './Card.scss';\nimport logo1 from '../../images/photosnap.svg';\nimport logo2 from '../../images/manage.svg';\nimport logo3 from '../../images/account.svg';\nimport logo4 from '../../images/myhome.svg';\nimport logo5 from '../../images/loop-studios.svg';\nimport logo6 from '../../images/faceit.svg';\nimport logo7 from '../../images/shortly.svg';\nimport logo8 from '../../images/insure.svg';\nimport logo9 from '../../images/eyecam-co.svg';\nimport logo10 from '../../images/the-air-filter-company.svg';\n\nfunction Logo(props) {\n  const {id} = props\n\n  const renderLogo = () => {\n    if (id === 1) {\n      return (<img src={logo1} alt=\"company logo\"/>)\n    }\n    if (id === 2) {\n      return (<img src={logo2} alt=\"company logo\"/>)\n    }\n    if (id === 3) {\n      return (<img src={logo3} alt=\"company logo\"/>)\n    }\n    if (id === 4) {\n      return (<img src={logo4} alt=\"company logo\"/>)\n    }\n    if (id === 5) {\n      return (<img src={logo5} alt=\"company logo\"/>)\n    }\n    if (id === 6) {\n      return (<img src={logo6} alt=\"company logo\"/>)\n    }\n    if (id === 7) {\n      return (<img src={logo7} alt=\"company logo\"/>)\n    }\n    if (id === 8) {\n      return (<img src={logo8} alt=\"company logo\"/>)\n    }\n    if (id === 9) {\n      return (<img src={logo9} alt=\"company logo\"/>)\n    }\n    if (id === 10) {\n      return (<img src={logo10} alt=\"company logo\"/>)\n    }\n  }\n\n  return (\n    <div className=\"logo\">\n      {renderLogo()}\n    </div>\n  );\n}\n\nexport default Logo;\n","import React from 'react';\nimport './Card.scss';\nimport CardHeader from './CardHeader';\nimport KeywordSection from '../KeywordSection/KeywordSection';\nimport Logo from './Logo';\n\nfunction Card(props) {\n  const {company, logo, isNew, featured, position, role, level, postedAt, contract,\n    location, languages, tools, id} = props.job;\n    \n  const containerClass = featured ? 'card-container card-featured': 'card-container';\n\n  return (\n    <div className={containerClass}>\n      <Logo id={id} />\n      <CardHeader company={company} logo={logo} isNew={isNew} featured={featured} \n        position={position} postedAt={postedAt} contract={contract}\n        location={location} id={id} />\n      <KeywordSection languages={languages} tools={tools} role={role} level={level} id={id} />\n    </div>\n  );\n}\n\nexport default Card;\n","import React, {useState, useEffect} from 'react';\nimport './App.scss';\nimport Card from './components/Card/Card';\nimport jobs from './data.json';\nimport headerMobile from './images/bg-header-mobile.svg';\nimport headerDesktop from './images/bg-header-desktop.svg';\n\nconst styles = {\n  container: isDesktopSized => ({\n    backgroundImage: isDesktopSized ? `url(${headerDesktop})`: `url(${headerMobile})`\n  })\n};\n\nfunction App() {\n  const mediaMatch = window.matchMedia('(min-width: 768px)');\n  const [matches, setMatches] = useState(mediaMatch);\n\n  useEffect(() => {\n    const handler = e => setMatches(e.matches);\n    mediaMatch.addListener(handler);\n    return () => mediaMatch.removeListener(handler);\n  }, []);\n\n  return (\n    <div>\n      <header style={styles.container(matches)} />\n      <main id=\"app\">\n        {jobs.map(job => \n          (<Card key={job.id} job={job} />)\n        )}\n      </main>\n      <footer>\n        <div className=\"attribution\">\n          Challenge by <a href=\"https://www.frontendmentor.io?ref=challenge\" target=\"_blank\" rel=\"noopener noreferrer\">Frontend Mentor</a>. \n          Coded by <a href=\"http://github.com/cch5ng\" target=\"_blank\" rel=\"noopener noreferrer\">Carol Chung</a>.\n        </div>  \n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}